/*! practical-forms v2.3.0 | (c) 2016, JJ Programs, LLC | Distributed under the MIT License */
angular.module('jjp.practical-forms.templates', []).run(['$templateCache', function($templateCache) {
  $templateCache.put("/jjp/pf/checkbox.html",
    "<div class=\"pf pf-input\" ng-class=\"{'has-error':!ngModel && ngRequired, 'has-success':ngModel&& ngRequired }\"><div class=checkbox tabindex=-1><label for={{::id}}><input id={{::id}} ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired type=\"checkbox\">{{title}}&nbsp; <span class=pf-required ng-show=\"required || ngRequired\">*</span></label></div></div>");
  $templateCache.put("/jjp/pf/email.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">*</span> <span ng-messages=subform.name.$error ng-show=\"subform.name.$invalid && subform.name.$dirty\" role=alert>&nbsp;&nbsp; <span ng-message=required>This field is required!</span> <span ng-message=\"minlength, maxlength\">Text must be between 0 and 255 characters!</span> <span ng-message=email>This doesn't seem to be a valid email!</span></span> <span ng-show=\"subform.name.$valid && subform.name.$dirty\" role=alert>&nbsp;&nbsp;All Good!</span></label><p class=FormHint ng-show=hasTransclude ng-transclude id={{::id}}-tip></p><div class=pf-form-control><input id={{::id}} aria-describedby={{::id}}-tip class=form-control name=name ng-trim=ngTrim ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired placeholder=\"Example: john.doe@company.com\" required type=\"email\"> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/group.html",
    "<fieldset><legend>{{title}}</legend><p class=help-block>{{description}}</p><p ng-transclude>&nbsp;</p></fieldset>");
  $templateCache.put("/jjp/pf/number.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">*</span> <span ng-messages=subform.name.$error ng-show=\"subform.name.$invalid && subform.name.$dirty\" role=alert>&nbsp;&nbsp; <span ng-show=\"subform.name.$invalid && subform.name.$dirty\"><span ng-message=required>This field is required!</span> <span ng-message=\"minlength, maxlength\">Text must be between 0 and 255 characters!</span> <span ng-message=number>That is not a number!</span> <span ng-message=max>Numbers must be less then {{max}}</span> <span ng-message=min>Numbers must be greater then {{min}}</span></span> <span ng-show=\"subform.name.$valid && subform.name.$dirty\" role=alert>&nbsp;&nbsp;All Good!</span></span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude></p><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-maxlength=255 ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired placeholder={{placeholder}} required type=number pf-number-mask max={{max}} min=\"{{min}}/\"> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/password.html",
    "<div class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">*</span> <span ng-messages=subform.name.$error ng-show=\"subform.name.$invalid && subform.name.$dirty\" role=alert>&nbsp;&nbsp; <span ng-message=required>This field is required!</span> <span ng-message=minlength>The password must be at least 8 characters long!</span> <span ng-message=maxlength>The password must be shorter then 255 characters!</span> <span ng-message=pattern>The password must contain at least 1 lowercase letter, 1 uppercase letter, and 1 digit!</span> <span ng-message=confirm>The confirmation password doesn't match the original!</span></span> <span ng-show=\"subform.name.$valid && subform.name.$dirty\" role=alert>&nbsp;&nbsp;All Good!</span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-trim=1 ng-maxlength=255 ng-minlength=8 ng-model=ngModel ng-disabled=ngDisabled ng-pattern=\"/(?=^.{8,}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s)[0-9a-zA-Z!@#$%^&*()]*$/\" ng-required=ngRequired placeholder={{placeholder}} required type=\"password\"> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/pattern.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">*</span> <span ng-messages=subform.name.$error ng-show=\"subform.name.$invalid && subform.name.$dirty\" role=alert>&nbsp;&nbsp; <span ng-message=required>This field is required!</span> <span ng-message=\"minlength, maxlength\">Text must be between 0 and 255 characters!</span> <span ng-show=pattern>Text is invalid</span></span> <span ng-show=\"subform.name.$valid && subform.name.$dirty\" role=alert>&nbsp;&nbsp;All Good!</span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-trim=\"ngTrim || true\" ng-maxlength=255 ng-minlength=0 ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired placeholder={{placeholder}} required> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/percentage.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">*</span> <span ng-messages=subform.name.$error ng-show=\"subform.name.$invalid && subform.name.$dirty\" role=alert>&nbsp;&nbsp; <span ng-message=required>This field is required!</span> <span ng-message=\"minlength, maxlength\">Text must be between 0 and 255 characters!</span> <span ng-message=percent>- Value must be between 0% and 100%</span></span> <span ng-show=\"subform.name.$valid && subform.name.$dirty\" role=alert>&nbsp;&nbsp;All Good!</span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude></p><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control name=name ng-trim=1 ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired pf-percentage-mask required> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/phone.html",
    "<div class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">*</span> <span ng-messages=subform.name.$error ng-show=\"subform.name.$invalid && subform.name.$dirty\" role=alert>&nbsp;&nbsp; <span ng-message=required>This field is required!</span> <span ng-message=\"minlength, maxlength\">Text must be between 0 and 255 characters!</span> <span ng-message=pattern>This doesn't seem to be valid phone number</span></span> <span ng-show=\"subform.name.$valid && subform.name.$dirty\" role=alert>&nbsp;&nbsp;All Good!</span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-model=ngModel ng-disabled=ngDisabled ng-pattern=\"/^(?:\\([2-9]\\d{2}\\)\\ ?|[2-9]\\d{2}(?:\\-?|\\ ?))[2-9]\\d{2}[- ]?\\d{4}$/\" ng-required=ngRequired ng-trim=true placeholder=\"Example: (123)-456-7890\" required> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/picture.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-form=subform ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\"><label class=control-label>{{title}}<span ng-if=\"required || ngRequired\">*</span> <span ng-show=\"subform.name.$invalid && subform.name.$dirty\"><span ng-show=subform.name.$error.required>- Required!</span></span></label><p class=FormHint ng-transclude ng-show=hasTransclude></p><div class=\"well row\"><div class=col-xs-9><h4><span ng-show=\"status == 4\">Success! File Uploaded</span> <span ng-show=\"status == 3\">Uploading...</span> <span ng-show=\"status == 2\">Loaded Image <small><i>Image may not be display correctly</i></small></span> <span ng-show=\"status == 1\">Loading Image {{load.loaded*100/load.total | number:0}}%</span> <span ng-show=\"status == 0\">No Image Selected</span> <span ng-show=\"status < 0\">Error! <span ng-show=\"status == -10\">- File is Too Large, Max Size: {{size/1000}} kB</span></span></h4><div class=\"fileinput-preview thumbnail\" style=\"width: 250px\" ng-show=\"status>= 2\"><img ng-src={{preview}} style=\"image-orientation: from-image\"></div><input class=form-control type=file name=name accept=image/* ng-required=ngRequired required style=display:none><p ng-show=\"status>=2\"><strong>File:</strong> {{ngModel.name}}</p></div><div class=col-xs-3><button type=button class=\"btn btn-block btn-default file-selector\">Select</button> <button type=button class=\"btn btn-block btn-success\" ng-click=Upload() ng-show=\"status>=2\" ng-if=showUpload>Upload</button> <button type=button class=\"btn btn-block btn-danger\" ng-click=Remove() ng-show=\"status>=2\">Remove</button></div></div></div>");
  $templateCache.put("/jjp/pf/radio.html",
    "<div class=\"pf pf-input\" ng-class=\"{'has-error':!ngModel && ngRequired, 'has-success':ngModel&& ngRequired }\"><div class=radio tabindex=-1><label for={{::id}}><input id={{::id}} ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired type=radio name={{name}} value=\"{{value}}\">{{title}}&nbsp; <span class=pf-required ng-show=\"required || ngRequired\">*</span></label></div></div>");
  $templateCache.put("/jjp/pf/state.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">*</span> <span ng-messages=subform.name.$error ng-show=\"subform.name.$invalid && subform.name.$dirty\" role=alert>&nbsp;&nbsp; <span ng-message=required>This field is required!</span> <span ng-message=\"minlength, maxlength\">Text must be between 0 and 255 characters!</span> <span ng-message=stateCode>State is Invalid. Please enter the state name or the state code!</span></span> <span ng-show=\"subform.name.$valid && subform.name.$dirty\" role=alert>&nbsp;&nbsp;All Good!</span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired ng-trim=true placeholder=\"Ex: OH or Ohio\" required> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/text.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">{{::config.requiredChar}}</span> <span ng-messages=subform.name.$error ng-show=\"subform.name.$invalid && subform.name.$dirty\" role=alert>&nbsp;&nbsp; <span ng-message=required>{{::config.validation.labels.required}}</span> <span ng-message=minlength>{{::config.validation.labels.minlength}}</span> <span ng-message=maxlength>{{::config.validation.labels.maxlength}}</span></span> <span ng-show=\"subform.name.$valid && subform.name.$dirty\" role=alert ng-if=config.validation.labels.valid>&nbsp;&nbsp;{{::config.validation.labels.valid}}</span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude></p><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-trim=1 ng-maxlength=255 ng-minlength=0 ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired placeholder={{placeholder}} required> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/textarea.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">*</span> <span ng-messages=subform.name.$error ng-show=\"subform.name.$invalid && subform.name.$dirty\" role=alert>&nbsp;&nbsp; <span ng-message=required>This field is required!</span> <span ng-message=maxlength>Text must be shorter then {{ngMaxlength || 2500}} characters!</span></span> <span ng-show=\"subform.name.$valid && subform.name.$dirty\" role=alert>&nbsp;&nbsp;All Good!</span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude><div class=pf-form-control><textarea aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-trim=1 ng-maxlength=2500 ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired placeholder={{placeholder}} required>\n" +
    "    <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span>\n" +
    "    <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span>\n" +
    "  </textarea></div></div>");
  $templateCache.put("/jjp/pf/confirm.html",
    "<div class=\"pf pf-modal\"><div class=modal-header><button type=button class=close aria-label=ctrl.Close ng-click=Cancel()><span aria-hidden=true>&times;</span></button><h4 class=modal-title>{{params.title}}</h4></div><div class=modal-body><p>{{params.message}}</p></div><div class=modal-footer><button type=button class=\"btn btn-primary\" ng-click=Ok()>OK</button> <button type=button class=\"btn btn-warning\" ng-click=Cancel()>Cancel</button></div></div>");
  $templateCache.put("/jjp/pf/date.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-form=subform ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\"><label class=control-label>{{title}}<span ng-if=\"required || ngRequired\">*</span> <span ng-show=\"subform.name.$invalid && subform.name.$dirty\"><span ng-show=subform.name.$error.required>- Required!</span></span></label><p class=FormHint ng-transclude ng-show=hasTransclude></p><p><input class=form-control ng-model=ngModel ng-disabled=ngDisabled is-open=isOpen ng-required={{ngRequired}} ng-click=\"isOpen=true\" ng-focus=\"isOpen=true\" uib-datepicker-popup=\"MMMM dd, yyyy\" datepicker-options=\"datepickerOptions\"> <span class=\"glyphicon glyphicon-remove form-control-feedback\" style=top:55px ng-show=\"subform.name.$invalid && subform.name.$dirty\"></span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" style=top:55px ng-show=\"!subform.name.$invalid && subform.name.$dirty\"></span></p></div>");
  $templateCache.put("/jjp/pf/info.html",
    "<div class=\"pf pf-modal\"><div class=modal-header><button type=button class=close aria-label=ctrl.Close ng-click=Ok()><span aria-hidden=true>&times;</span></button><h4 class=modal-title>{{params.title}}</h4></div><div class=modal-body><p>{{params.message}}</p></div><div class=modal-footer><button type=button class=\"btn btn-primary\" ng-click=Ok()>OK</button></div></div>");
  $templateCache.put("/jjp/pf/url.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">*</span> <span ng-messages=subform.name.$error ng-show=\"subform.name.$invalid && subform.name.$dirty\" role=alert>&nbsp;&nbsp; <span ng-message=required>This field is required!</span> <span ng-message=\"minlength, maxlength\">Text must be between 0 and 255 characters!</span> <span ng-message=url>Not a valid URL. Make sure it starts with 'http://'</span></span> <span ng-show=\"subform.name.$valid && subform.name.$dirty\" role=alert>&nbsp;&nbsp;All Good!</span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-trim=ngTrim ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired placeholder=\"Example: http://company.com\" required type=\"url\"> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/zipcode.html",
    "<div class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">*</span> <span ng-messages=subform.name.$error ng-show=\"subform.name.$invalid && subform.name.$dirty\" role=alert>&nbsp;&nbsp; <span ng-message=required>This field is required!</span> <span ng-message=pattern>Invalid Zip Code. Plase enter the 5 digit zip code</span></span> <span ng-show=\"subform.name.$valid && subform.name.$dirty\" role=alert>&nbsp;&nbsp;All Good!</span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-trim=ngTrim ng-model=ngModel ng-disabled=ngDisabled ng-pattern=\"/^\\d{5}(-\\d{4})?$/\" ng-required=ngRequired placeholder=\"Ex: 12345\" required> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/passwordform.html",
    "<form name=form class=\"pf pf-form\"><fieldset><legend>{{::s.meta.header}}</legend><pf-password title={{::s.oldpassword.title}} ng-model=ngModel[s.oldpassword.model] ng-disabled=ngDisabled ng-required=1>{{::s.oldpassword.help}}</pf-password><pf-password title={{::s.newpassword.title}} ng-model=ngModel[s.newpassword.model] ng-disabled=ngDisabled ng-required=1>{{::s.newpassword.help}}</pf-password><pf-password title={{::s.confirmPassword.title}} ng-model=ngModel[s.confirmPassword.model] ng-disabled=ngDisabled ng-required=1 confirm=ngModel[s.newpassword.model]>{{::s.confirmPassword.help}}</pf-password><span ng-transclude>&nbsp;</span> <button type=submit class=\"btn btn-primary btn-block\" ng-disabled=\"form.$invalid || ngDisabled\">{{::s.meta.submit}}</button></fieldset></form>");
  $templateCache.put("/jjp/pf/loginform.html",
    "<form name=form class=\"pf pf-form\"><fieldset><legend>{{::s.meta.header}}</legend><pf-email title={{::s.username.title}} ng-model=ngModel[s.username.model] ng-required=1 ng-disabled=ngDisabled ng-if=s.meta.emailOnly placeholder={{::s.username.placeholder}}>{{::s.username.help}}</pf-email><pf-text title={{::s.username.title}} ng-model=ngModel[s.username.model] ng-required=1 ng-disabled=ngDisabled ng-if=!s.meta.emailOnly placeholder={{::s.username.placeholder}}>{{::s.username.help}}</pf-text><pf-password title={{::s.password.title}} ng-model=ngModel[s.password.model] ng-required=1 ng-disabled=ngDisabled>{{::s.password.help}}</pf-password><span ng-transclude>&nbsp;</span> <button type=submit class=\"btn btn-primary btn-block\" ng-disabled=\"form.$invalid || ngDisabled\">{{::s.meta.submit}}</button></fieldset></form>");
  $templateCache.put("/jjp/pf/registerform.html",
    "<form name=form class=\"pf pf-form\"><fieldset><legend>{{::s.meta.header}}</legend><pf-text title={{::s.firstname.title}} ng-model=ngModel[s.firstname.model] ng-required=1 ng-disabled=ngDisabled placeholder={{::s.firstname.placeholder}}>{{::s.firstname.help}}</pf-text><pf-text title={{::s.lastname.title}} ng-model=ngModel[s.lastname.model] ng-required=1 ng-disabled=ngDisabled placeholder={{::s.lastname.placeholder}}>{{::s.lastname.help}}</pf-text><pf-email title={{::s.email.title}} ng-model=ngModel[s.email.model] ng-required=1 ng-disabled=ngDisabled>{{::s.email.help}}</pf-email><pf-password title={{::s.password.title}} ng-model=ngModel[s.password.model] ng-required=1 ng-disabled=ngDisabled>{{::s.password.help}}</pf-password><pf-password title={{::s.confirmPassword.title}} ng-model=ngModel[s.confirmPassword.model] ng-required=1 ng-disabled=ngDisabled confirm=ngModel[s.password.model]>{{::s.confirmPassword.help}}</pf-password><span ng-transclude>&nbsp;</span> <button type=submit class=\"btn btn-primary btn-block\" ng-disabled=\"form.$invalid || ngDisabled\">{{::s.meta.submit}}</button></fieldset></form>");
}]);

!function(a,b,c){"use strict";a.startsWith=function(a,b){return a.substring(0,b.length)===b},a.endsWith=function(a,b){return a.substring(a.length-b.length,a.length)===b},a.module=b.module("jjp.practical-forms",["jjp.practical-forms.templates","ui.bootstrap","ngAria","ngMessages"]),a.module.controller("pfModalCtrl",["$scope","$uibModalInstance","params","data",function(a,b,c,d){a.params=c,a.data=d,a.Ok=function(){b.close()},a.Cancel=function(){b.dismiss("cancel")}}]),a.parseModelOptions=function(a,c){var d={templateUrl:"/jjp/pf/confirm.html",controller:"pfModalCtrl",resolve:{params:{title:"Modal Title",message:"Modal Body"},data:{}}};return b.merge({},d,a,c)},a.hasTransclude=function(a){var b=a.find("p").html();return b&&b.length>0},a.setDirty=function(a,b,c){a!==b&&""!==a&&c.subform.name.$setDirty()},a.gerenateId=function(){function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()},a.valOrDefault=function(a,b){return""===a||a===c?b:a},a.formOptions=function(b,c,d){var e=b.meta||{};return{header:a.valOrDefault(e.header,c),submit:a.valOrDefault(e.submit,d)}},a.vORdInput=function(b,c,d,e,f){var g=b[c]||{};return{title:a.valOrDefault(g.title,d),model:a.valOrDefault(g.model,c),help:a.valOrDefault(g.help,e),placeholder:a.valOrDefault(g.placeholder,f)}},a.baseDirective=function(c,d){return{scope:{title:"@",placeholder:"@?",ngModel:"=",required:"=?",ngRequired:"=?",ngDisabled:"=?",pfConfig:"=?"},restrict:"E",replace:!0,transclude:!0,templateUrl:"/jjp/pf/"+c+".html",link:function(c,e){c.id=a.gerenateId(),c.hasTransclude=a.hasTransclude(e),c.$watch("subform.name.$modelValue",a.setDirty),c.validation=(d||{validation:{successLabel:"All Good!"}}).validation,c.config=b.merge({},d,c.pfConfig),console.log(c.config)}}},a.VERSION="2.3.0"}(window.practicalForms=window.practicalForms||{},window.angular),function(a,b,c){"use strict";a.module.provider("pfConfig",function(){var a={requiredChar:"*",validation:{labels:{valid:"All Good!",required:"This input is required",minlength:"Text must be between 0 and 255 characters",maxlength:"Text must be between 0 and 255 characters"}}};this.setConfig=function(c){a=b.merge({},a,c)},this.$get=[function(){return a}]})}(window.practicalForms=window.practicalForms||{},window.angular),function(a,b){"use strict";a.module.directive("pfCheckbox",function(){return a.baseDirective("checkbox")})}(window.practicalForms),function(a,b){"use strict";a.module.directive("pfEmail",function(){return a.baseDirective("email")})}(window.practicalForms),function(a,b){"use strict";a.module.directive("pfGroup",function(){return{restrict:"E",scope:{title:"@",description:"@?"},transclude:!0,replace:!0,templateUrl:"/jjp/pf/group.html"}})}(window.practicalForms),function(a,b,c){"use strict";a.module.directive("pfNumber",function(){return b.merge({scope:{max:"=?",min:"=?"}},a.baseDirective("number"))}),a.module.directive("pfNumberMask",function(){return{restrict:"A",require:"ngModel",scope:!1,link:function(a,b,c,d){d.$formatters.push(function(a){return a}),d.$parsers.push(function(a){var b=a||0;return"number"!=typeof b&&(0===a.length?a=0:b=parseFloat(a),b!==d.$viewValue&&(d.$setViewValue(b),d.$render())),b})}}})}(window.practicalForms,window.angular),function(a,b,c){"use strict";a.module.directive("pfPassword",function(){return b.merge({scope:{confirm:"=?"}},a.baseDirective("password"),{link:function(b,c){b.id=a.gerenateId(),b.hasTransclude=a.hasTransclude(c),b.$watch("subform.name.$modelValue",a.setDirty),"confirm"in b&&(b.subform.name.$validators.confirm=function(a){return!!a&&a===b.confirm})}})})}(window.practicalForms,window.angular),function(a,b){"use strict";a.module.directive("pfRegex",function(){return a.baseDirective("pattern")})}(window.practicalForms),function(a,b){"use strict";a.module.directive("pfPercentage",function(){return a.baseDirective("percentage")}),a.module.directive("pfPercentageMask",function(){return{restrict:"A",require:"ngModel",link:function(b,c,d,e){e.$formatters.push(function(b){return new a.Percentage(b).pretty()}),e.$parsers.push(function(b){var c=new a.Percentage(b);return c.pretty()!==e.$viewValue&&(e.$setViewValue(c.pretty()),e.$render()),c.value()>=0&&c.value()<=100?e.$setValidity("percent",!0):e.$setValidity("percent",!1),c.value()})}}}),a.Percentage=function(b){b=String(b);var c=b.indexOf("%")<0&&!a.endsWith(b,"%"),d=b.replace(/^0*/,"");this._value=d.replace(/[^0-9]/g,""),c&&this.backspace()},a.Percentage.prototype.value=function(){return parseFloat(this._value)||0},a.Percentage.prototype.pretty=function(){return this.value()>9?this.value()+" %":"0"+this.value()+" %"},a.Percentage.prototype.backspace=function(){this._value=this._value.slice(0,this._value.length-1)}}(window.practicalForms),function(a,b){"use strict";a.module.directive("pfPhone",function(){return a.baseDirective("phone")})}(window.practicalForms),function(a,b){"use strict";a.module.factory("jjp.FileObject",["$q",function(a){var b=function(a,b){return function(){b.resolve(a.result)}},c=function(a,b){return function(){b.reject(a.result)}},d=function(a,b){return function(a){b.notify(a)}},e={ReadImage:function(e){var f=a.defer(),g=new FileReader;return g.onload=b(g,f),g.onerror=c(g,f),g.onprogress=d(g,f),g.readAsDataURL(e),f.promise}};return e}]),a.module.directive("pfPictureUploader",function(){return{restrict:"E",scope:{title:"@",ngModel:"=",preview:"=?",url:"@?",result:"=?",status:"=?",maxSize:"=?",required:"=?",ngRequired:"=?"},replace:!0,transclude:!0,templateUrl:"/jjp/pf/picture.html",link:function(b,c){angular.element(c[0].querySelector(".file-selector")).bind("click",function(){c[0].querySelector("input").click()}),angular.element(c[0].querySelector("input")).bind("change",function(a){"undefined"!=typeof(a.srcElement||a.target).files[0]&&b.$apply(function(){b.ngModel=(a.srcElement||a.target).files[0],b.Select()})}),b.hasTransclude=a.hasTransclude(c),b.$watch("subform.name.$modelValue",a.setDirty)},controller:["$scope","$http","jjp.FileObject",function(a,c,d){a.Select=function(){return a.status=1,a.ngModel.size>a.size?(a.status=-10,void(a.result="Image is too Big!")):void d.ReadImage(a.ngModel).then(function(b){a.preview=b,a.status=2},function(b){a.status=-1,a.result=b},function(b){a.load=b})},a.Upload=function(){a.status=3;var d=new FormData;d.append("file",a.ngModel),c.post(a.url,d,{transformRequest:angular.identity,headers:{"Content-Type":b}}).success(function(b){a.status=4,a.result=b}).error(function(b){a.status=-1,a.result=b})},a.Remove=function(){a.ngModel=null,a.preview=null,a.status=0},a.CanUpload=function(){var b=new RegExp("^(ht|f)tp(s?)://(([a-zA-Z0-9-._]+(.[a-zA-Z0-9-._]+)+)|localhost)(/?)([a-zA-Z0-9-.?,'/\\+&amp;%$#_]*)?([dw./%+-=&amp;?:\\&quot;',|~;]*)$");return b.test(a.url)},a.size=a.maxSize||3e6,a.ngModel={},a.status=0,a.result={},a.showPreview=0,a.showUpload=a.CanUpload()}]}})}(window.practicalForms),function(a,b,c){"use strict";a.module.directive("pfRadio",function(){return b.merge({},a.baseDirective("radio"),{scope:{value:"@"},link:function(b,c,d){b.id=a.gerenateId(),b.hasTransclude=a.hasTransclude(c),b.ngRequired=a.valOrDefault(b.ngRequired,!1),b.check=b.ngRequired,b.name=d.ngModel}})})}(window.practicalForms,window.angular),function(a,b,c){"use strict";var d={alabama:"al",alaska:"ak",arizona:"az",arkansas:"ar",california:"ca",colorado:"co",connecticut:"ct",delaware:"de",florida:"fl",georgia:"ga",hawaii:"hi",idaho:"id",illinois:"il",indiana:"in",iowa:"ia",kansas:"ks",kentucky:"ky",louisiana:"la",maine:"me",maryland:"md",massachusetts:"ma",michigan:"mi",minnesota:"mn",mississippi:"ms",missouri:"mo",montana:"mt",nebraska:"ne",nevada:"nv","new hampshire":"nh","new jersey":"nj","new mexico":"nm","new york":"ny","north carolina":"nc","north dakota":"nd",ohio:"oh",oklahoma:"ok",oregon:"or",pennsylvania:"pa","rhode island":"ri","south carolina":"sc","south dakota":"sd",tennessee:"tn",texas:"tx",utah:"ut",vermont:"vt",virginia:"va",washington:"wa","west virginia":"wv",wisconsin:"wi",wyoming:"wy","american samoa":"as","district of columbia":"dc","federated states of micronesia":"fm",guam:"gu","marshall islands":"mh","northern mariana islands":"mp",palau:"pw","puerto rico":"pr","virgin islands":"vi","armed forces africa":"ae","armed forces americas":"aa","armed forces canada":"ae","armed forces europe":"ae","armed forces middle east":"ae","armed forces pacific":"ap",al:"alabama",ak:"alaska",az:"arizona",ar:"arkansas",ca:"california",co:"colorado",ct:"connecticut",de:"delaware",fl:"florida",ga:"georgia",hi:"hawaii",id:"idaho",il:"illinois","in":"indiana",ia:"iowa",ks:"kansas",ky:"kentucky",la:"louisiana",me:"maine",md:"maryland",ma:"massachusetts",mi:"michigan",mn:"minnesota",ms:"mississippi",mo:"missouri",mt:"montana",ne:"nebraska",nv:"nevada",nh:"new hampshire",nj:"new jersey",nm:"new mexico",ny:"new york",nc:"north carolina",nd:"north dakota",oh:"ohio",ok:"oklahoma",or:"oregon",pa:"pennsylvania",ri:"rhode island",sc:"south carolina",sd:"south dakota",tn:"tennessee",tx:"texas",ut:"utah",vt:"vermont",va:"virginia",wa:"washington",wv:"west virginia",wi:"wisconsin",wy:"wyoming",as:"american samoa",dc:"district of columbia",fm:"federated states of micronesia",gu:"guam",mh:"marshall islands",mp:"northern mariana islands",pw:"palau",pr:"puerto rico",vi:"virgin islands"};a.module.directive("pfState",function(){return b.merge({require:["ngModel","^form"],scope:{output:"@"}},a.baseDirective("state"),{link:function(b,c){b.id=a.gerenateId(),b.output=a.valOrDefault(b.output,"code"),b.hasTransclude=a.hasTransclude(c),b.subform.name.$validators.stateCode=function(a){return"undefined"!=typeof a&&""!==a&&a.toLowerCase()in d},b.subform.name.$parsers.push(function(a){return a=a.toLowerCase(),a in d?"code"===b.output?2===a.length?a.toUpperCase():d[a].toUpperCase():2===a.length?d[a]:a:""}),b.$watch("subform.name.$modelValue",function(a,b,c){a!==b&&""!==a&&c.subform.name.$setDirty()})}})})}(window.practicalForms,window.angular),function(a,b){"use strict";a.module.directive("pfText",["pfConfig",function(b){return console.log("ctrl",b),a.baseDirective("text",b)}])}(window.practicalForms),function(a,b){"use strict";a.module.directive("pfTextarea",function(){return a.baseDirective("textarea")})}(window.practicalForms),function(a,b){"use strict";a.module.directive("pfConfirm",["$uibModal",function(b){return{restrict:"A",scope:{pfTitle:"@",pfMessage:"@",pfConfirm:"&",modalOptions:"=?"},link:function(c,d){d.bind("click",function(){c.modalOptions=a.parseModelOptions({templateUrl:"/jjp/pf/confirm.html",params:{title:c.pfTitle||"Are you sure?",message:c.pfMessage||"Please confirm this action!"}},c.modalOptions),b.open(c.modalOptions).result.then(function(){c.pfConfirm()})})}}}])}(window.practicalForms),function(a,b,c){"use strict";a.module.directive("pfDate",function(){return b.merge({},a.baseDirective("date"),{scope:{datepickerOptions:"=?"}})})}(window.practicalForms,window.angular),function(a,b){"use strict";a.module.directive("pfInfo",["$uibModal",function(b){return{restrict:"A",scope:{pfTitle:"@",pfMessage:"@",modalOptions:"=?"},link:function(c,d){d.bind("click",function(){c.modalOptions=a.parseModelOptions({templateUrl:"/jjp/pf/info.html",params:{title:c.pfTitle||"Information",message:c.pfMessage||"Here is some more info for you!"}},c.modalOptions),b.open(c.modalOptions)})}}}])}(window.practicalForms),function(a,b){"use strict";a.module.directive("pfUrl",function(){return a.baseDirective("url")})}(window.practicalForms),function(a,b){"use strict";a.module.directive("pfZip",function(){return a.baseDirective("zipcode")})}(window.practicalForms),function(a,b){"use strict";function c(b){return b=b||{meta:{}},{meta:a.formOptions(b,"Change Password","Submit"),oldpassword:a.vORdInput(b,"oldpassword","Old Password","",""),newpassword:a.vORdInput(b,"newpassword","New Password","",""),confirmPassword:a.vORdInput(b,"confirmPassword","Confirm Password","","")}}a.module.directive("pfFormPassword",function(){return{scope:{ngModel:"=",ngDisabled:"=?",ngSubmit:"&",settings:"=?"},require:"^form",restrict:"E",replace:!0,transclude:!0,templateUrl:"/jjp/pf/passwordform.html",link:function(b,d){b.s=c(b.settings),b.hasTransclude=a.hasTransclude(d)}}})}(window.practicalForms),function(a,b){"use strict";function c(b){b=b||{meta:{}};var c={meta:a.formOptions(b,"Login","Login"),username:a.vORdInput(b,"username","Username","","Ex. johndoe2"),password:a.vORdInput(b,"password","Password","","")};return c.meta.emailOnly=a.valOrDefault(b.meta.emailOnly,!1),c}a.module.directive("pfFormLogin",function(){return{scope:{ngModel:"=",ngDisabled:"=?",ngSubmit:"&",settings:"=?"},restrict:"E",replace:!0,transclude:!0,templateUrl:"/jjp/pf/loginform.html",link:function(b,d){b.s=c(b.settings),b.hasTransclude=a.hasTransclude(d)}}})}(window.practicalForms),function(a,b){"use strict";function c(b){return b=b||{},{meta:a.formOptions(b,"Register","Create Account"),firstname:a.vORdInput(b,"firstname","First Name","","Ex. John"),lastname:a.vORdInput(b,"lastname","Last Name","","Ex. Doe"),email:a.vORdInput(b,"email","Email","","Ex. john.doe@someplace.com"),password:a.vORdInput(b,"password","Password","",""),confirmPassword:a.vORdInput(b,"confirmPassword","Confirm Password","","")}}a.module.directive("pfFormRegister",function(){return{scope:{ngModel:"=",ngDisabled:"=?",ngSubmit:"&",settings:"=?"},require:"^form",restrict:"E",replace:!0,transclude:!0,templateUrl:"/jjp/pf/registerform.html",link:function(b,d){b.s=c(b.settings),b.hasTransclude=a.hasTransclude(d)}}})}(window.practicalForms);