/*! practical-forms v2.3.0 | (c) 2016, JJ Programs, LLC | Distributed under the MIT License */
angular.module('jjp.practical-forms.templates', []).run(['$templateCache', function($templateCache) {
  $templateCache.put("/jjp/pf/validation.html",
    "<span ng-messages=subform.name.$error ng-show=\"subform.name.$invalid && subform.name.$dirty\" role=alert>&nbsp;&nbsp; <span ng-message=required>{{::config.validation.labels.required}}</span> <span ng-message=minlength>{{::config.validation.labels.minlength}}</span> <span ng-message=maxlength>{{::config.validation.labels.maxlength}}</span> <span ng-message=email>{{::config.validation.labels.email}}</span> <span ng-message=number>{{::config.validation.labels.number}}</span> <span ng-message=max>{{::config.validation.labels.max}}</span> <span ng-message=min>{{::config.validation.labels.min}}</span> <span ng-message=pattern>{{::config.validation.labels.pattern}}</span> <span ng-message=confirm>{{::config.validation.labels.confirm}}</span> <span ng-message=pattern>{{::config.validation.labels.pattern}}</span> <span ng-message=percent>{{::config.validation.labels.percent}}</span> <span ng-message=stateCode>{{::config.validation.labels.stateCode}}</span> <span ng-message=password>{{::config.validation.labels.password}}</span> <span ng-message=url>{{::config.validation.labels.url}}</span> <span ng-message=phone>{{::config.validation.labels.phone}}</span> <span ng-message=zipcode>{{::config.validation.labels.zipcode}}</span></span> <span ng-show=\"subform.name.$valid && subform.name.$dirty\" role=alert ng-if=config.validation.labels.valid>&nbsp;&nbsp;{{::config.validation.labels.valid}}</span>");
  $templateCache.put("/jjp/pf/checkbox.html",
    "<div class=\"pf pf-input\" ng-class=\"{'has-error':!ngModel && ngRequired, 'has-success':ngModel && ngRequired }\"><div class=checkbox tabindex=-1><label for={{::id}}><input id={{::id}} ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired type=\"checkbox\">{{title}}&nbsp; <span class=pf-required ng-if=\"required || ngRequired\">{{::config.requiredChar}}</span></label></div></div>");
  $templateCache.put("/jjp/pf/email.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">{{::config.requiredChar}}</span> <span ng-include=\"'/jjp/pf/validation.html'\"></span></label><p class=FormHint ng-show=hasTransclude ng-transclude id={{::id}}-tip></p><div class=pf-form-control><input id={{::id}} aria-describedby={{::id}}-tip class=form-control name=name ng-trim=ngTrim ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired placeholder=\"Example: john.doe@company.com\" required type=\"email\"> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/group.html",
    "<fieldset><legend>{{title}}</legend><p class=help-block>{{description}}</p><p ng-transclude>&nbsp;</p></fieldset>");
  $templateCache.put("/jjp/pf/number.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">{{::config.requiredChar}}</span> <span ng-include=\"'/jjp/pf/validation.html'\"></span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude></p><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-maxlength=255 ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired placeholder={{placeholder}} required type=number pf-number-mask max={{max}} min=\"{{min}}/\"> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/password.html",
    "<div class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">{{::config.requiredChar}}</span> <span ng-include=\"'/jjp/pf/validation.html'\"></span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-trim=1 ng-maxlength=255 ng-minlength=8 ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired placeholder={{placeholder}} required type=\"password\"> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/pattern.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">{{::config.requiredChar}}</span> <span ng-include=\"'/jjp/pf/validation.html'\"></span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-trim=\"ngTrim || true\" ng-maxlength=255 ng-minlength=0 ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired placeholder={{placeholder}} required> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/percentage.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">{{::config.requiredChar}}</span> <span ng-include=\"'/jjp/pf/validation.html'\"></span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude></p><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control name=name ng-trim=1 ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired pf-percentage-mask required> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/phone.html",
    "<div class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">{{::config.requiredChar}}</span> <span ng-include=\"'/jjp/pf/validation.html'\"></span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired ng-trim=true placeholder=\"Example: (123)456-7890\" required> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/picture.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-form=subform ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\"><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">{{::config.requiredChar}}</span> <span ng-include=\"'/jjp/pf/validation.html'\"></span></label><p class=FormHint ng-transclude ng-show=hasTransclude></p><div class=\"well row\"><div class=col-xs-9><h4><span ng-show=\"status == 4\">Success! File Uploaded</span> <span ng-show=\"status == 3\">Uploading...</span> <span ng-show=\"status == 2\">Loaded Image <small><i>Image may not be display correctly</i></small></span> <span ng-show=\"status == 1\">Loading Image {{load.loaded*100/load.total | number:0}}%</span> <span ng-show=\"status == 0\">No Image Selected</span> <span ng-show=\"status < 0\">Error! <span ng-show=\"status == -10\">- File is Too Large, Max Size: {{size/1000}} kB</span></span></h4><div class=\"fileinput-preview thumbnail\" style=\"width: 250px\" ng-show=\"status>= 2\"><img ng-src={{preview}} style=\"image-orientation: from-image\"></div><input class=form-control type=file name=name accept=image/* ng-required=ngRequired required style=display:none><p ng-show=\"status>=2\"><strong>File:</strong> {{ngModel.name}}</p></div><div class=col-xs-3><button type=button class=\"btn btn-block btn-default file-selector\">Select</button> <button type=button class=\"btn btn-block btn-success\" ng-click=Upload() ng-show=\"status>=2\" ng-if=showUpload>Upload</button> <button type=button class=\"btn btn-block btn-danger\" ng-click=Remove() ng-show=\"status>=2\">Remove</button></div></div></div>");
  $templateCache.put("/jjp/pf/radio.html",
    "<div class=\"pf pf-input\" ng-class=\"{'has-error':!ngModel && ngRequired, 'has-success':ngModel&& ngRequired }\"><div class=radio tabindex=-1><label for={{::id}}><input id={{::id}} ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired type=radio name={{name}} value=\"{{value}}\">{{title}}&nbsp; <span class=pf-required ng-if=\"required || ngRequired\">{{::config.requiredChar}}</span></label></div></div>");
  $templateCache.put("/jjp/pf/state.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">{{::config.requiredChar}}</span> <span ng-messages=subform.name.$error ng-show=\"subform.name.$invalid && subform.name.$dirty\" role=alert>&nbsp;&nbsp; <span ng-message=required>This field is required!</span> <span ng-message=\"minlength, maxlength\">Text must be between 0 and 255 characters!</span> <span ng-message=stateCode>State is Invalid. Please enter the state name or the state code!</span></span> <span ng-show=\"subform.name.$valid && subform.name.$dirty\" role=alert>&nbsp;&nbsp;All Good!</span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired ng-trim=true placeholder=\"Ex: OH or Ohio\" required> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/text.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">{{::config.requiredChar}}</span> <span ng-include=\"'/jjp/pf/validation.html'\"></span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude></p><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-trim=1 ng-maxlength=255 ng-minlength=0 ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired placeholder={{placeholder}} required> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/textarea.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">{{::config.requiredChar}}</span> <span ng-include=\"'/jjp/pf/validation.html'\"></span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude><div class=pf-form-control><textarea aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-trim=1 ng-maxlength=2500 ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired placeholder={{placeholder}} required>\n" +
    "    <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span>\n" +
    "    <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span>\n" +
    "  </textarea></div></div>");
  $templateCache.put("/jjp/pf/confirm.html",
    "<div class=\"pf pf-modal\"><div class=modal-header><button type=button class=close aria-label=ctrl.Close ng-click=Cancel()><span aria-hidden=true>&times;</span></button><h4 class=modal-title>{{params.title}}</h4></div><div class=modal-body><p>{{params.message}}</p></div><div class=modal-footer><button type=button class=\"btn btn-primary\" ng-click=Ok()>OK</button> <button type=button class=\"btn btn-warning\" ng-click=Cancel()>Cancel</button></div></div>");
  $templateCache.put("/jjp/pf/date.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-form=subform ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\"><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">{{::config.requiredChar}}</span> <span ng-include=\"'/jjp/pf/validation.html'\"></span></label><p class=FormHint ng-transclude ng-show=hasTransclude></p><p><input class=form-control ng-model=ngModel ng-disabled=ngDisabled is-open=isOpen ng-required={{ngRequired}} ng-click=\"isOpen=true\" ng-focus=\"isOpen=true\" uib-datepicker-popup=\"MMMM dd, yyyy\" datepicker-options=\"datepickerOptions\"> <span class=\"glyphicon glyphicon-remove form-control-feedback\" style=top:55px ng-show=\"subform.name.$invalid && subform.name.$dirty\"></span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" style=top:55px ng-show=\"!subform.name.$invalid && subform.name.$dirty\"></span></p></div>");
  $templateCache.put("/jjp/pf/info.html",
    "<div class=\"pf pf-modal\"><div class=modal-header><button type=button class=close aria-label=ctrl.Close ng-click=Ok()><span aria-hidden=true>&times;</span></button><h4 class=modal-title>{{params.title}}</h4></div><div class=modal-body><p>{{params.message}}</p></div><div class=modal-footer><button type=button class=\"btn btn-primary\" ng-click=Ok()>OK</button></div></div>");
  $templateCache.put("/jjp/pf/url.html",
    "<div class=\"pf pf-input\" class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">{{::config.requiredChar}}</span> <span ng-include=\"'/jjp/pf/validation.html'\"></span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-trim=ngTrim ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired placeholder=\"Example: http://company.com\" required type=\"url\"> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/zipcode.html",
    "<div class=\"form-group has-feedback\" ng-class=\"{'has-error':subform.name.$invalid && subform.name.$dirty, 'has-success':!subform.name.$invalid && subform.name.$dirty }\" ng-form=subform tabindex=-1><label class=control-label for={{::id}}>{{title}} <span class=pf-required ng-if=\"required || ngRequired\">{{::config.requiredChar}}</span> <span ng-include=\"'/jjp/pf/validation.html'\"></span></label><p class=FormHint id={{::id}}-tip ng-show=hasTransclude ng-transclude><div class=pf-form-control><input aria-describedby={{::id}}-tip class=form-control id={{::id}} name=name ng-trim=ngTrim ng-model=ngModel ng-disabled=ngDisabled ng-required=ngRequired placeholder=\"Ex: 12345\" required> <span class=\"glyphicon glyphicon-remove form-control-feedback\" ng-show=\"subform.name.$invalid && subform.name.$dirty\">&nbsp;</span> <span class=\"glyphicon glyphicon-ok form-control-feedback\" ng-show=\"!subform.name.$invalid && subform.name.$dirty\">&nbsp;</span></div></div>");
  $templateCache.put("/jjp/pf/passwordform.html",
    "<form name=form class=\"pf pf-form\"><fieldset><legend>{{::s.meta.header}}</legend><pf-password title={{::s.oldpassword.title}} ng-model=ngModel[s.oldpassword.model] ng-disabled=ngDisabled ng-required=1>{{::s.oldpassword.help}}</pf-password><pf-password title={{::s.newpassword.title}} ng-model=ngModel[s.newpassword.model] ng-disabled=ngDisabled ng-required=1>{{::s.newpassword.help}}</pf-password><pf-password title={{::s.confirmPassword.title}} ng-model=ngModel[s.confirmPassword.model] ng-disabled=ngDisabled ng-required=1 confirm=ngModel[s.newpassword.model]>{{::s.confirmPassword.help}}</pf-password><span ng-transclude>&nbsp;</span> <button type=submit class=\"btn btn-primary btn-block\" ng-disabled=\"form.$invalid || ngDisabled\">{{::s.meta.submit}}</button></fieldset></form>");
  $templateCache.put("/jjp/pf/loginform.html",
    "<form name=form class=\"pf pf-form\"><fieldset><legend>{{::s.meta.header}}</legend><pf-email title={{::s.username.title}} ng-model=ngModel[s.username.model] ng-required=1 ng-disabled=ngDisabled ng-if=s.meta.emailOnly placeholder={{::s.username.placeholder}}>{{::s.username.help}}</pf-email><pf-text title={{::s.username.title}} ng-model=ngModel[s.username.model] ng-required=1 ng-disabled=ngDisabled ng-if=!s.meta.emailOnly placeholder={{::s.username.placeholder}}>{{::s.username.help}}</pf-text><pf-password title={{::s.password.title}} ng-model=ngModel[s.password.model] ng-required=1 ng-disabled=ngDisabled>{{::s.password.help}}</pf-password><span ng-transclude>&nbsp;</span> <button type=submit class=\"btn btn-primary btn-block\" ng-disabled=\"form.$invalid || ngDisabled\">{{::s.meta.submit}}</button></fieldset></form>");
  $templateCache.put("/jjp/pf/registerform.html",
    "<form name=form class=\"pf pf-form\"><fieldset><legend>{{::s.meta.header}}</legend><pf-text title={{::s.firstname.title}} ng-model=ngModel[s.firstname.model] ng-required=1 ng-disabled=ngDisabled placeholder={{::s.firstname.placeholder}}>{{::s.firstname.help}}</pf-text><pf-text title={{::s.lastname.title}} ng-model=ngModel[s.lastname.model] ng-required=1 ng-disabled=ngDisabled placeholder={{::s.lastname.placeholder}}>{{::s.lastname.help}}</pf-text><pf-email title={{::s.email.title}} ng-model=ngModel[s.email.model] ng-required=1 ng-disabled=ngDisabled>{{::s.email.help}}</pf-email><pf-password title={{::s.password.title}} ng-model=ngModel[s.password.model] ng-required=1 ng-disabled=ngDisabled>{{::s.password.help}}</pf-password><pf-password title={{::s.confirmPassword.title}} ng-model=ngModel[s.confirmPassword.model] ng-required=1 ng-disabled=ngDisabled confirm=ngModel[s.password.model]>{{::s.confirmPassword.help}}</pf-password><span ng-transclude>&nbsp;</span> <button type=submit class=\"btn btn-primary btn-block\" ng-disabled=\"form.$invalid || ngDisabled\">{{::s.meta.submit}}</button></fieldset></form>");
}]);

!function(a,b){"use strict";function c(b){a.extend(this,b)}String.prototype.endsWith||(String.prototype.endsWith=function(a,b){var c=this.toString();("number"!=typeof b||!isFinite(b)||Math.floor(b)!==b||b>c.length)&&(b=c.length),b-=a.length;var d=c.lastIndexOf(a,b);return d!==-1&&d===b});var d={requiredChar:"*",validation:{patterns:{password:/(?=^.{8,}$)(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\s)[0-9a-zA-Z!@#$%^&*()]*$/,phone:/^(?:\([2-9]\d{2}\)\ ?|[2-9]\d{2}(?:\-?|\ ?))[2-9]\d{2}[- ]?\d{4}$/,zipcode:/^\d{5}(-\d{4})?$/},labels:{valid:"All Good!",required:"This input is required",minlength:"Text must be between 0 and 255 characters",maxlength:"Text must be between 0 and 255 characters",email:"This does not seem to be a valid email",number:"That is not a number",max:"Numbers must be less then {{max}}",min:"Numbers must be greater then {{min}}",confirm:"The confirmation password does not match the original",pattern:"Text is invalid",percent:"Value must be between 0% and 100%",stateCode:"State is Invalid. Please enter the state name or 2 letter code",password:"The password must contain at least 1 lowercase letter, 1 uppercase letter, and 1 digit",phone:"This does not seem to be valid phone number",url:'Not a valid URL. Make sure it starts with "http://"',zipcode:"Invalid Zip Code. Plase enter the 5 digit zip code"}}};c.prototype.baseFormDirective=function(b,c,d){var e=this,f={scope:{ngModel:"=",ngDisabled:"=?",ngSubmit:"&",settings:"=?"},require:"^form",restrict:"E",replace:!0,transclude:!0,templateUrl:"/jjp/pf/"+b+"form.html",link:function(a,b){a.hasTransclude=e.hasTransclude(b),a.s=d(a.settings)}};return"object"==typeof c&&a.extend(f.scope,c),f},c.prototype.formOptions=function(a,b,c){var d=this,e=a.meta||{};return{header:d.valOrDefault(e.header,b),submit:d.valOrDefault(e.submit,c)}},c.prototype.vORdInput=function(a,b,c,d,e){var f=this,g=a[b]||{};return{title:f.valOrDefault(g.title,c),model:f.valOrDefault(g.model,b),help:f.valOrDefault(g.help,d),placeholder:f.valOrDefault(g.placeholder,e)}},c.prototype.baseDirective=function(b,c,d){var e=this,f={scope:{title:"@",placeholder:"@?",ngModel:"=",required:"=?",ngRequired:"=?",ngDisabled:"=?",pfConfig:"=?"},restrict:"E",replace:!0,transclude:!0,templateUrl:"/jjp/pf/"+b+".html",link:function(a,b,c){e.baseLinkFunc(a,b,c,d)}};return"object"==typeof c&&a.extend(f.scope,c),f},c.prototype.baseLinkFunc=function(b,c,d,e){var f=this;b.id=this.gerenateId(),b.hasTransclude=this.hasTransclude(c),b.$watch("subform.name.$modelValue",f.setDirty),b.config=a.merge({},f,b.pfConfig),e&&e(b,c,d)},c.prototype.valOrDefault=function(a,c){return""===a||a===b?c:a},c.prototype.parseModelOptions=function(b,c){var d={templateUrl:"/jjp/pf/confirm.html",controller:"pfModalCtrl",resolve:{params:{title:"Modal Title",message:"Modal Body"},data:{}}};return a.merge({},d,b,c)},c.prototype.hasTransclude=function(a){var b=a.find("p").html();return b&&b.length>0},c.prototype.gerenateId=function(){function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()},c.prototype.setDirty=function(a,b,c){a!==b&&""!==a&&c.subform.name.$setDirty()},a.module("jjp.practical-forms",["jjp.practical-forms.templates","ui.bootstrap","ngAria","ngMessages"]).provider("pfConfig",function(){this.setConfig=function(b){d=a.merge({},d,b)},this.$get=[function(){return new c(d)}]}).controller("pfModalCtrl",["$scope","$uibModalInstance","params","data",function(a,b,c,d){a.params=c,a.data=d,a.Ok=function(){b.close()},a.Cancel=function(){b.dismiss("cancel")}}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfCheckbox",["pfConfig",function(a){return a.baseDirective("checkbox")}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfEmail",["pfConfig",function(a){return a.baseDirective("email")}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfGroup",[function(){return{restrict:"E",scope:{title:"@",description:"@?"},transclude:!0,replace:!0,templateUrl:"/jjp/pf/group.html"}}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfNumber",["pfConfig",function(a){return a.baseDirective("number",{max:"=?",min:"=?"})}]).directive("pfNumberMask",function(){return{restrict:"A",require:"ngModel",scope:!1,link:function(a,b,c,d){d.$formatters.push(function(a){return a}),d.$parsers.push(function(a){var b=a||0;return"number"!=typeof b&&(0===a.length?a=0:b=parseFloat(a),b!==d.$viewValue&&(d.$setViewValue(b),d.$render())),b})}}})}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfPassword",["pfConfig",function(a){return a.baseDirective("password",{confirm:"=?"},function(b){b.subform.name.$validators.password=function(b){return a.validation.patterns.password.test(b)},"confirm"in b&&(b.subform.name.$validators.confirm=function(a){return!!a&&a===b.confirm})})}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfRegex",["pfConfig",function(a){return a.baseDirective("pattern")}])}(window.angular),function(a){"use strict";var b=function(a){a=String(a);var b=a.indexOf("%")<0&&!a.endsWith("%"),c=a.replace(/^0*/,"");this._value=c.replace(/[^0-9]/g,""),b&&this.backspace()};b.prototype.value=function(){return parseFloat(this._value)||0},b.prototype.pretty=function(){return this.value()>9?this.value()+" %":"0"+this.value()+" %"},b.prototype.backspace=function(){this._value=this._value.slice(0,this._value.length-1)},a.module("jjp.practical-forms").directive("pfPercentage",["pfConfig",function(a){return a.baseDirective("percentage")}]).directive("pfPercentageMask",function(){return{restrict:"A",require:"ngModel",link:function(a,c,d,e){e.$formatters.push(function(a){return new b(a).pretty()}),e.$parsers.push(function(a){var c=new b(a);return c.pretty()!==e.$viewValue&&(e.$setViewValue(c.pretty()),e.$render()),c.value()>=0&&c.value()<=100?e.$setValidity("percent",!0):e.$setValidity("percent",!1),c.value()})}}})}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfPhone",["pfConfig",function(a){return a.baseDirective("phone",{},function(b){b.subform.name.$validators.phone=function(b){return a.validation.patterns.phone.test(b)}})}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").factory("jjp.FileObject",["$q",function(a){var b=function(a,b){return function(){b.resolve(a.result)}},c=function(a,b){return function(){b.reject(a.result)}},d=function(a,b){return function(a){b.notify(a)}},e={ReadImage:function(e){var f=a.defer(),g=new FileReader;return g.onload=b(g,f),g.onerror=c(g,f),g.onprogress=d(g,f),g.readAsDataURL(e),f.promise}};return e}]).directive("pfPictureUploader",["pfConfig",function(b){var c=b.baseDirective("picture",{preview:"=?",url:"@?",result:"=?",status:"=?",maxSize:"=?"},function(b,c){a.element(c[0].querySelector(".file-selector")).bind("click",function(){c[0].querySelector("input").click()}),a.element(c[0].querySelector("input")).bind("change",function(a){"undefined"!=typeof(a.srcElement||a.target).files[0]&&b.$apply(function(){b.ngModel=(a.srcElement||a.target).files[0],b.Select()})})});return c.controller=["$scope","$http","jjp.FileObject",function(b,c,d){b.Select=function(){return b.status=1,b.ngModel.size>b.size?(b.status=-10,void(b.result="Image is too Big!")):void d.ReadImage(b.ngModel).then(function(a){b.preview=a,b.status=2},function(a){b.status=-1,b.result=a},function(a){b.load=a})},b.Upload=function(){b.status=3;var d=new FormData;d.append("file",b.ngModel),c.post(b.url,d,{transformRequest:a.identity,headers:{"Content-Type":void 0}}).success(function(a){b.status=4,b.result=a}).error(function(a){b.status=-1,b.result=a})},b.Remove=function(){b.ngModel=null,b.preview=null,b.status=0},b.CanUpload=function(){var a=new RegExp("^(ht|f)tp(s?)://(([a-zA-Z0-9-._]+(.[a-zA-Z0-9-._]+)+)|localhost)(/?)([a-zA-Z0-9-.?,'/\\+&amp;%$#_]*)?([dw./%+-=&amp;?:\\&quot;',|~;]*)$");return a.test(b.url)},b.size=b.maxSize||3e6,b.ngModel={},b.status=0,b.result={},b.showPreview=0,b.showUpload=b.CanUpload()}],c}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfRadio",["pfConfig",function(a){return a.baseDirective("radio",{value:"@"},function(b,c,d){b.check=b.ngRequired,b.name=d.ngModel,b.ngRequired=a.valOrDefault(b.ngRequired,!1)})}])}(window.angular),function(a){"use strict";var b={alabama:"al",alaska:"ak",arizona:"az",arkansas:"ar",california:"ca",colorado:"co",connecticut:"ct",delaware:"de",florida:"fl",georgia:"ga",hawaii:"hi",idaho:"id",illinois:"il",indiana:"in",iowa:"ia",kansas:"ks",kentucky:"ky",louisiana:"la",maine:"me",maryland:"md",massachusetts:"ma",michigan:"mi",minnesota:"mn",mississippi:"ms",missouri:"mo",montana:"mt",nebraska:"ne",nevada:"nv","new hampshire":"nh","new jersey":"nj","new mexico":"nm","new york":"ny","north carolina":"nc","north dakota":"nd",ohio:"oh",oklahoma:"ok",oregon:"or",pennsylvania:"pa","rhode island":"ri","south carolina":"sc","south dakota":"sd",tennessee:"tn",texas:"tx",utah:"ut",vermont:"vt",virginia:"va",washington:"wa","west virginia":"wv",wisconsin:"wi",wyoming:"wy","american samoa":"as","district of columbia":"dc","federated states of micronesia":"fm",guam:"gu","marshall islands":"mh","northern mariana islands":"mp",palau:"pw","puerto rico":"pr","virgin islands":"vi","armed forces africa":"ae","armed forces americas":"aa","armed forces canada":"ae","armed forces europe":"ae","armed forces middle east":"ae","armed forces pacific":"ap",al:"alabama",ak:"alaska",az:"arizona",ar:"arkansas",ca:"california",co:"colorado",ct:"connecticut",de:"delaware",fl:"florida",ga:"georgia",hi:"hawaii",id:"idaho",il:"illinois","in":"indiana",ia:"iowa",ks:"kansas",ky:"kentucky",la:"louisiana",me:"maine",md:"maryland",ma:"massachusetts",mi:"michigan",mn:"minnesota",ms:"mississippi",mo:"missouri",mt:"montana",ne:"nebraska",nv:"nevada",nh:"new hampshire",nj:"new jersey",nm:"new mexico",ny:"new york",nc:"north carolina",nd:"north dakota",oh:"ohio",ok:"oklahoma",or:"oregon",pa:"pennsylvania",ri:"rhode island",sc:"south carolina",sd:"south dakota",tn:"tennessee",tx:"texas",ut:"utah",vt:"vermont",va:"virginia",wa:"washington",wv:"west virginia",wi:"wisconsin",wy:"wyoming",as:"american samoa",dc:"district of columbia",fm:"federated states of micronesia",gu:"guam",mh:"marshall islands",mp:"northern mariana islands",pw:"palau",pr:"puerto rico",vi:"virgin islands"};a.module("jjp.practical-forms").directive("pfState",["pfConfig",function(a){var c=a.baseDirective("state",{output:"@"},function(a){a.subform.name.$validators.stateCode=function(a){return"undefined"!=typeof a&&""!==a&&a.toLowerCase()in b},a.subform.name.$parsers.push(function(c){return c=c.toLowerCase(),c in b?"code"===a.output?2===c.length?c.toUpperCase():b[c].toUpperCase():2===c.length?b[c]:c:""}),a.$watch("subform.name.$modelValue",function(a,b,c){a!==b&&""!==a&&c.subform.name.$setDirty()})});return c.require=["ngModel","^form"],c}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfText",["pfConfig",function(a){return a.baseDirective("text")}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfTextarea",["pfConfig",function(a){return a.baseDirective("textarea")}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfConfirm",["pfConfig","$uibModal",function(a,b){return{restrict:"A",scope:{pfTitle:"@",pfMessage:"@",pfConfirm:"&",modalOptions:"=?"},link:function(c,d){d.bind("click",function(){c.modalOptions=a.parseModelOptions({templateUrl:"/jjp/pf/confirm.html",resolve:{params:{title:c.pfTitle||"Are you sure?",message:c.pfMessage||"Please confirm this action!"}}},c.modalOptions),b.open(c.modalOptions).result.then(function(){c.pfConfirm()})})}}}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfDate",["pfConfig",function(a){return a.baseDirective("date",{datepickerOptions:"=?"})}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfInfo",["pfConfig","$uibModal",function(a,b){return{restrict:"A",scope:{pfTitle:"@",pfMessage:"@",modalOptions:"=?"},link:function(c,d){d.bind("click",function(){c.modalOptions=a.parseModelOptions({templateUrl:"/jjp/pf/info.html",resolve:{params:{title:c.pfTitle||"Information",message:c.pfMessage||"Here is some more info for you!"}}},c.modalOptions),b.open(c.modalOptions)})}}}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfUrl",["pfConfig",function(a){return a.baseDirective("url")}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfZip",["pfConfig",function(a){return a.baseDirective("zipcode",{},function(b){b.subform.name.$validators.zipcode=function(b){return a.validation.patterns.zipcode.test(b)}})}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfFormPassword",["pfConfig",function(a){function b(b){return b=b||{meta:{}},{meta:a.formOptions(b,"Change Password","Submit"),oldpassword:a.vORdInput(b,"oldpassword","Old Password","",""),newpassword:a.vORdInput(b,"newpassword","New Password","",""),confirmPassword:a.vORdInput(b,"confirmPassword","Confirm Password","","")}}return a.baseFormDirective("password",{},b)}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfFormLogin",["pfConfig",function(a){function b(b){b=b||{meta:{}};var c={meta:a.formOptions(b,"Login","Login"),username:a.vORdInput(b,"username","Username","","Ex. johndoe2"),password:a.vORdInput(b,"password","Password","","")};return c.meta.emailOnly=a.valOrDefault(b.meta.emailOnly,!1),c}return a.baseFormDirective("login",{},b)}])}(window.angular),function(a){"use strict";a.module("jjp.practical-forms").directive("pfFormRegister",["pfConfig",function(a){function b(b){return b=b||{},{meta:a.formOptions(b,"Register","Create Account"),firstname:a.vORdInput(b,"firstname","First Name","","Ex. John"),lastname:a.vORdInput(b,"lastname","Last Name","","Ex. Doe"),email:a.vORdInput(b,"email","Email","","Ex. john.doe@someplace.com"),password:a.vORdInput(b,"password","Password","",""),confirmPassword:a.vORdInput(b,"confirmPassword","Confirm Password","","")}}return a.baseFormDirective("register",{},b)}])}(window.angular);